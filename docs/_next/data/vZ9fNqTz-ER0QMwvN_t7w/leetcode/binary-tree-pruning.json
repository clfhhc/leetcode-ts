{"pageProps":{"solutionContent":"/* solution start */\n\n/**\n * Definition for a binary tree node.\n */\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n  constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n    this.val = val === undefined ? 0 : val;\n    this.left = left === undefined ? null : left;\n    this.right = right === undefined ? null : right;\n  }\n}\n\nfunction pruneTree(root: TreeNode | null): TreeNode | null {\n  if (!root) {\n    return root;\n  }\n\n  const node = new TreeNode(root.val);\n  node.left = pruneTree(root.left);\n  node.right = pruneTree(root.right);\n  if (root.val === 1 || node.left || node.right) {\n    return node;\n  }\n  return null;\n}\n\n/* solution end */","questionData":{"questionId":"832","title":"Binary Tree Pruning","titleSlug":"binary-tree-pruning","content":"<p>Given the <code>root</code> of a binary tree, return <em>the same tree where every subtree (of the given tree) not containing a </em><code>1</code><em> has been removed</em>.</p>\n\n<p>A subtree of a node <code>node</code> is <code>node</code> plus every node that is a descendant of <code>node</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_2.png\" style=\"width: 500px; height: 140px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,0,0,1]\n<strong>Output:</strong> [1,null,0,null,1]\n<strong>Explanation:</strong> \nOnly the red nodes satisfy the property &quot;every subtree not containing a 1&quot;.\nThe diagram on the right represents the answer.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_1.png\" style=\"width: 500px; height: 115px;\" />\n<pre>\n<strong>Input:</strong> root = [1,0,1,0,0,0,1]\n<strong>Output:</strong> [1,null,1,null,1]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/05/1028.png\" style=\"width: 500px; height: 134px;\" />\n<pre>\n<strong>Input:</strong> root = [1,1,0,1,1,0,1,0]\n<strong>Output:</strong> [1,1,0,1,1,null,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 200]</code>.</li>\n\t<li><code>Node.val</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n","translatedTitle":null,"translatedContent":null,"isPaidOnly":false,"difficulty":"Medium","similarQuestions":"[]","exampleTestcases":"[1,null,0,0,1]\n[1,0,1,0,0,0,1]\n[1,1,0,1,1,0,1,0]","categoryTitle":"Algorithms","questionDetailUrl":"/problems/binary-tree-pruning/","topicTags":[{"id":"VG9waWNUYWdOb2RlOjIw","name":"Tree","slug":"tree","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjIx","name":"Depth-First Search","slug":"depth-first-search","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjYxMDU3","name":"Binary Tree","slug":"binary-tree","__typename":"TopicTagNode"}],"stats":"{\"totalAccepted\": \"140.1K\", \"totalSubmission\": \"197.4K\", \"totalAcceptedRaw\": 140109, \"totalSubmissionRaw\": 197380, \"acRate\": \"71.0%\"}","hints":[],"__typename":"QuestionNode"},"urqlState":{"417205044":{"data":"{\"question\":{\"questionId\":\"832\",\"title\":\"Binary Tree Pruning\",\"titleSlug\":\"binary-tree-pruning\",\"content\":\"<p>Given the <code>root</code> of a binary tree, return <em>the same tree where every subtree (of the given tree) not containing a </em><code>1</code><em> has been removed</em>.</p>\\n\\n<p>A subtree of a node <code>node</code> is <code>node</code> plus every node that is a descendant of <code>node</code>.</p>\\n\\n<p>&nbsp;</p>\\n<p><strong>Example 1:</strong></p>\\n<img alt=\\\"\\\" src=\\\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_2.png\\\" style=\\\"width: 500px; height: 140px;\\\" />\\n<pre>\\n<strong>Input:</strong> root = [1,null,0,0,1]\\n<strong>Output:</strong> [1,null,0,null,1]\\n<strong>Explanation:</strong> \\nOnly the red nodes satisfy the property &quot;every subtree not containing a 1&quot;.\\nThe diagram on the right represents the answer.\\n</pre>\\n\\n<p><strong>Example 2:</strong></p>\\n<img alt=\\\"\\\" src=\\\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_1.png\\\" style=\\\"width: 500px; height: 115px;\\\" />\\n<pre>\\n<strong>Input:</strong> root = [1,0,1,0,0,0,1]\\n<strong>Output:</strong> [1,null,1,null,1]\\n</pre>\\n\\n<p><strong>Example 3:</strong></p>\\n<img alt=\\\"\\\" src=\\\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/05/1028.png\\\" style=\\\"width: 500px; height: 134px;\\\" />\\n<pre>\\n<strong>Input:</strong> root = [1,1,0,1,1,0,1,0]\\n<strong>Output:</strong> [1,1,0,1,1,null,1]\\n</pre>\\n\\n<p>&nbsp;</p>\\n<p><strong>Constraints:</strong></p>\\n\\n<ul>\\n\\t<li>The number of nodes in the tree is in the range <code>[1, 200]</code>.</li>\\n\\t<li><code>Node.val</code> is either <code>0</code> or <code>1</code>.</li>\\n</ul>\\n\",\"translatedTitle\":null,\"translatedContent\":null,\"isPaidOnly\":false,\"difficulty\":\"Medium\",\"similarQuestions\":\"[]\",\"exampleTestcases\":\"[1,null,0,0,1]\\n[1,0,1,0,0,0,1]\\n[1,1,0,1,1,0,1,0]\",\"categoryTitle\":\"Algorithms\",\"questionDetailUrl\":\"/problems/binary-tree-pruning/\",\"topicTags\":[{\"id\":\"VG9waWNUYWdOb2RlOjIw\",\"name\":\"Tree\",\"slug\":\"tree\",\"__typename\":\"TopicTagNode\"},{\"id\":\"VG9waWNUYWdOb2RlOjIx\",\"name\":\"Depth-First Search\",\"slug\":\"depth-first-search\",\"__typename\":\"TopicTagNode\"},{\"id\":\"VG9waWNUYWdOb2RlOjYxMDU3\",\"name\":\"Binary Tree\",\"slug\":\"binary-tree\",\"__typename\":\"TopicTagNode\"}],\"stats\":\"{\\\"totalAccepted\\\": \\\"140.1K\\\", \\\"totalSubmission\\\": \\\"197.4K\\\", \\\"totalAcceptedRaw\\\": 140109, \\\"totalSubmissionRaw\\\": 197380, \\\"acRate\\\": \\\"71.0%\\\"}\",\"hints\":[],\"__typename\":\"QuestionNode\"}}"}}},"__N_SSG":true}
{"pageProps":{"solutionContent":"/* solution start */\n\n/**\n * Definition for a binary tree node.\n */\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n  constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n    this.val = val === undefined ? 0 : val;\n    this.left = left === undefined ? null : left;\n    this.right = right === undefined ? null : right;\n  }\n}\n\nfunction levelOrder(root: TreeNode | null): number[][] {\n  if (!root) {\n    return [];\n  }\n  let pointer = root;\n  const result: number[][] = [[]];\n  const traverse: TreeNode[][] = [[pointer], []];\n  while (traverse[0].length) {\n    pointer = traverse[0].shift() as TreeNode;\n    result[result.length - 1].push(pointer.val);\n    pointer.left && traverse[1].push(pointer.left);\n    pointer.right && traverse[1].push(pointer.right);\n    if (traverse[0].length === 0) {\n      traverse.push(traverse.shift() as TreeNode[]);\n      result.push([]);\n      continue;\n    }\n  }\n  if (result.length && result[result.length - 1].length === 0) {\n    result.pop();\n  }\n  return result;\n}\n\n/* solution end */","questionData":{"questionId":"102","title":"Binary Tree Level Order Traversal","titleSlug":"binary-tree-level-order-traversal","content":"<p>Given the <code>root</code> of a binary tree, return <em>the level order traversal of its nodes&#39; values</em>. (i.e., from left to right, level by level).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[3],[9,20],[15,7]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n","translatedTitle":null,"translatedContent":null,"isPaidOnly":false,"difficulty":"Medium","similarQuestions":"[{\"title\": \"Binary Tree Zigzag Level Order Traversal\", \"titleSlug\": \"binary-tree-zigzag-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Level Order Traversal II\", \"titleSlug\": \"binary-tree-level-order-traversal-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Depth of Binary Tree\", \"titleSlug\": \"minimum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Vertical Order Traversal\", \"titleSlug\": \"binary-tree-vertical-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Average of Levels in Binary Tree\", \"titleSlug\": \"average-of-levels-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cousins in Binary Tree\", \"titleSlug\": \"cousins-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]","exampleTestcases":"[3,9,20,null,null,15,7]\n[1]\n[]","categoryTitle":"Algorithms","questionDetailUrl":"/problems/binary-tree-level-order-traversal/","topicTags":[{"id":"VG9waWNUYWdOb2RlOjIw","name":"Tree","slug":"tree","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjIy","name":"Breadth-First Search","slug":"breadth-first-search","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjYxMDU3","name":"Binary Tree","slug":"binary-tree","__typename":"TopicTagNode"}],"stats":"{\"totalAccepted\": \"1.2M\", \"totalSubmission\": \"2M\", \"totalAcceptedRaw\": 1214282, \"totalSubmissionRaw\": 1995237, \"acRate\": \"60.9%\"}","hints":[],"__typename":"QuestionNode"},"urqlState":{"3467872531":{"data":"{\"question\":{\"questionId\":\"102\",\"title\":\"Binary Tree Level Order Traversal\",\"titleSlug\":\"binary-tree-level-order-traversal\",\"content\":\"<p>Given the <code>root</code> of a binary tree, return <em>the level order traversal of its nodes&#39; values</em>. (i.e., from left to right, level by level).</p>\\n\\n<p>&nbsp;</p>\\n<p><strong>Example 1:</strong></p>\\n<img alt=\\\"\\\" src=\\\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\\\" style=\\\"width: 277px; height: 302px;\\\" />\\n<pre>\\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\\n<strong>Output:</strong> [[3],[9,20],[15,7]]\\n</pre>\\n\\n<p><strong>Example 2:</strong></p>\\n\\n<pre>\\n<strong>Input:</strong> root = [1]\\n<strong>Output:</strong> [[1]]\\n</pre>\\n\\n<p><strong>Example 3:</strong></p>\\n\\n<pre>\\n<strong>Input:</strong> root = []\\n<strong>Output:</strong> []\\n</pre>\\n\\n<p>&nbsp;</p>\\n<p><strong>Constraints:</strong></p>\\n\\n<ul>\\n\\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\\n\\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\\n</ul>\\n\",\"translatedTitle\":null,\"translatedContent\":null,\"isPaidOnly\":false,\"difficulty\":\"Medium\",\"similarQuestions\":\"[{\\\"title\\\": \\\"Binary Tree Zigzag Level Order Traversal\\\", \\\"titleSlug\\\": \\\"binary-tree-zigzag-level-order-traversal\\\", \\\"difficulty\\\": \\\"Medium\\\", \\\"translatedTitle\\\": null}, {\\\"title\\\": \\\"Binary Tree Level Order Traversal II\\\", \\\"titleSlug\\\": \\\"binary-tree-level-order-traversal-ii\\\", \\\"difficulty\\\": \\\"Medium\\\", \\\"translatedTitle\\\": null}, {\\\"title\\\": \\\"Minimum Depth of Binary Tree\\\", \\\"titleSlug\\\": \\\"minimum-depth-of-binary-tree\\\", \\\"difficulty\\\": \\\"Easy\\\", \\\"translatedTitle\\\": null}, {\\\"title\\\": \\\"Binary Tree Vertical Order Traversal\\\", \\\"titleSlug\\\": \\\"binary-tree-vertical-order-traversal\\\", \\\"difficulty\\\": \\\"Medium\\\", \\\"translatedTitle\\\": null}, {\\\"title\\\": \\\"Average of Levels in Binary Tree\\\", \\\"titleSlug\\\": \\\"average-of-levels-in-binary-tree\\\", \\\"difficulty\\\": \\\"Easy\\\", \\\"translatedTitle\\\": null}, {\\\"title\\\": \\\"N-ary Tree Level Order Traversal\\\", \\\"titleSlug\\\": \\\"n-ary-tree-level-order-traversal\\\", \\\"difficulty\\\": \\\"Medium\\\", \\\"translatedTitle\\\": null}, {\\\"title\\\": \\\"Cousins in Binary Tree\\\", \\\"titleSlug\\\": \\\"cousins-in-binary-tree\\\", \\\"difficulty\\\": \\\"Easy\\\", \\\"translatedTitle\\\": null}]\",\"exampleTestcases\":\"[3,9,20,null,null,15,7]\\n[1]\\n[]\",\"categoryTitle\":\"Algorithms\",\"questionDetailUrl\":\"/problems/binary-tree-level-order-traversal/\",\"topicTags\":[{\"id\":\"VG9waWNUYWdOb2RlOjIw\",\"name\":\"Tree\",\"slug\":\"tree\",\"__typename\":\"TopicTagNode\"},{\"id\":\"VG9waWNUYWdOb2RlOjIy\",\"name\":\"Breadth-First Search\",\"slug\":\"breadth-first-search\",\"__typename\":\"TopicTagNode\"},{\"id\":\"VG9waWNUYWdOb2RlOjYxMDU3\",\"name\":\"Binary Tree\",\"slug\":\"binary-tree\",\"__typename\":\"TopicTagNode\"}],\"stats\":\"{\\\"totalAccepted\\\": \\\"1.2M\\\", \\\"totalSubmission\\\": \\\"2M\\\", \\\"totalAcceptedRaw\\\": 1214282, \\\"totalSubmissionRaw\\\": 1995237, \\\"acRate\\\": \\\"60.9%\\\"}\",\"hints\":[],\"__typename\":\"QuestionNode\"}}"}}},"__N_SSG":true}
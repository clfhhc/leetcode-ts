{"pageProps":{"solutionContent":"/* solution start */\n\n/**\n * Definition for a binary tree node.\n */\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n  constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n    this.val = val === undefined ? 0 : val;\n    this.left = left === undefined ? null : left;\n    this.right = right === undefined ? null : right;\n  }\n}\n\nfunction inorderTraversal(root: TreeNode | null): number[] {\n  const result: number[] = [];\n  const stack: TreeNode[] = [];\n  let pointer = root;\n  while (pointer || stack.length) {\n    while (pointer) {\n      stack.push(pointer);\n      pointer = pointer.left;\n    }\n    pointer = stack.pop() as TreeNode;\n    result.push(pointer.val);\n    pointer = pointer.right;\n  }\n\n  return result;\n}\n\n/* solution end */","questionData":{"questionId":"94","title":"Binary Tree Inorder Traversal","titleSlug":"binary-tree-inorder-traversal","content":"<p>Given the <code>root</code> of a binary tree, return <em>the inorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\" style=\"width: 125px; height: 200px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?","translatedTitle":null,"translatedContent":null,"isPaidOnly":false,"difficulty":"Easy","similarQuestions":"[{\"title\": \"Validate Binary Search Tree\", \"titleSlug\": \"validate-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Postorder Traversal\", \"titleSlug\": \"binary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a BST\", \"titleSlug\": \"kth-smallest-element-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Binary Search Tree Value II\", \"titleSlug\": \"closest-binary-search-tree-value-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Convert Binary Search Tree to Sorted Doubly Linked List\", \"titleSlug\": \"convert-binary-search-tree-to-sorted-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Distance Between BST Nodes\", \"titleSlug\": \"minimum-distance-between-bst-nodes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]","exampleTestcases":"[1,null,2,3]\n[]\n[1]","categoryTitle":"Algorithms","questionDetailUrl":"/problems/binary-tree-inorder-traversal/","topicTags":[{"id":"VG9waWNUYWdOb2RlOjE1","name":"Stack","slug":"stack","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjIw","name":"Tree","slug":"tree","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjIx","name":"Depth-First Search","slug":"depth-first-search","__typename":"TopicTagNode"},{"id":"VG9waWNUYWdOb2RlOjYxMDU3","name":"Binary Tree","slug":"binary-tree","__typename":"TopicTagNode"}],"stats":"{\"totalAccepted\": \"1.4M\", \"totalSubmission\": \"2M\", \"totalAcceptedRaw\": 1439098, \"totalSubmissionRaw\": 2035648, \"acRate\": \"70.7%\"}","hints":[],"__typename":"QuestionNode"},"urqlState":{}},"__N_SSG":true}
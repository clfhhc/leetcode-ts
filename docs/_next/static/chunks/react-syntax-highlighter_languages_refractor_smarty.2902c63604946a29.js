"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[849,3047],{7305:function(b){function a(a){!function(a){function b(a,b){return"___"+a.toUpperCase()+b+"___"}Object.defineProperties(a.languages["markup-templating"]={},{buildPlaceholders:{value:function(c,d,e,f){if(c.language===d){var g=c.tokenStack=[];c.code=c.code.replace(e,function(a){if("function"==typeof f&&!f(a))return a;for(var h,e=g.length;-1!==c.code.indexOf(h=b(d,e));)++e;return g[e]=a,h}),c.grammar=a.languages.markup}}},tokenizePlaceholders:{value:function(c,d){if(c.language===d&&c.tokenStack){c.grammar=a.languages[d];var e=0,f=Object.keys(c.tokenStack);g(c.tokens)}function g(j){for(var k=0;k<j.length;k++){if(e>=f.length)break;var h=j[k];if("string"==typeof h||h.content&&"string"==typeof h.content){var n=f[e],o=c.tokenStack[n],l="string"==typeof h?h:h.content,p=b(d,n),m=l.indexOf(p);if(m> -1){++e;var q=l.substring(0,m),s=new a.Token(d,a.tokenize(o,c.grammar),"language-"+d,o),r=l.substring(m+p.length),i=[];q&&i.push.apply(i,g([q])),i.push(s),r&&i.push.apply(i,g([r])),"string"==typeof h?j.splice.apply(j,[k,1].concat(i)):h.content=i}}else h.content&&g(h.content)}return j}}}})}(a)}b.exports=a,a.displayName="markupTemplating",a.aliases=[]},7962:function(b,d,c){var e=c(7305);function a(b){var a,c,d;b.register(e),(a=b).languages.smarty={comment:{pattern:/^\{\*[\s\S]*?\*\}/,greedy:!0},"embedded-php":{pattern:/^\{php\}[\s\S]*?\{\/php\}/,greedy:!0,inside:{smarty:{pattern:/^\{php\}|\{\/php\}$/,inside:null},php:{pattern:/[\s\S]+/,alias:"language-php",inside:a.languages.php}}},string:[{pattern:/"(?:\\.|[^"\\\r\n])*"/,greedy:!0,inside:{interpolation:{pattern:/\{[^{}]*\}|`[^`]*`/,inside:{"interpolation-punctuation":{pattern:/^[{`]|[`}]$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:null}}},variable:/\$\w+/}},{pattern:/'(?:\\.|[^'\\\r\n])*'/,greedy:!0}],keyword:{pattern:/(^\{\/?)[a-z_]\w*\b(?!\()/i,lookbehind:!0,greedy:!0},delimiter:{pattern:/^\{\/?|\}$/,greedy:!0,alias:"punctuation"},number:/\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,variable:[/\$(?!\d)\w+/,/#(?!\d)\w+#/,{pattern:/(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/,lookbehind:!0},{pattern:/(\[)(?!\d)\w+(?=\])/,lookbehind:!0}],function:{pattern:/(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i,lookbehind:!0},"attr-name":/\b[a-z_]\w*(?=\s*=)/i,boolean:/\b(?:false|no|off|on|true|yes)\b/,punctuation:/[\[\](){}.,:`]|->/,operator:[/[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,/\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,/\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/]},a.languages.smarty["embedded-php"].inside.smarty.inside=a.languages.smarty,a.languages.smarty.string[0].inside.interpolation.inside.expression.inside=a.languages.smarty,c=/"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,d=RegExp(/\{\*[\s\S]*?\*\}/.source+"|"+/\{php\}[\s\S]*?\{\/php\}/.source+"|"+/\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(/<str>/g,function(){return c.source}),"g"),a.hooks.add("before-tokenize",function(b){var c=!1;a.languages["markup-templating"].buildPlaceholders(b,"smarty",d,function(a){return"{/literal}"===a&&(c=!1),!c&&("{literal}"===a&&(c=!0),!0)})}),a.hooks.add("after-tokenize",function(b){a.languages["markup-templating"].tokenizePlaceholders(b,"smarty")})}b.exports=a,a.displayName="smarty",a.aliases=[]}}])
{
  "id": 2,
  "slug": "add-two-numbers",
  "title": "Add Two Numbers",
  "tags": [
    "linked-list",
    "math",
    "recursion"
  ],
  "difficulty": "medium",
  "code": "<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> { z } </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&#39;zod&#39;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> { ProblemMeta, TestCase } </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&#39;../packages/src/types.js&#39;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">meta</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ProblemMeta</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  id: </span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  slug: </span><span style=\"color: #032F62\">&#39;add-two-numbers&#39;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  title: </span><span style=\"color: #032F62\">&#39;Add Two Numbers&#39;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  tags: [</span><span style=\"color: #032F62\">&#39;linked-list&#39;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&#39;math&#39;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&#39;recursion&#39;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  difficulty: </span><span style=\"color: #032F62\">&#39;medium&#39;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Helper type for linked list node</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">interface</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">val</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">next</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">inputSchema</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> z.</span><span style=\"color: #6F42C1\">object</span><span style=\"color: #24292E\">({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  l1: z.</span><span style=\"color: #6F42C1\">object</span><span style=\"color: #24292E\">({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    val: z.</span><span style=\"color: #6F42C1\">number</span><span style=\"color: #24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    next: z.</span><span style=\"color: #6F42C1\">lazy</span><span style=\"color: #24292E\">(() </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> z.</span><span style=\"color: #6F42C1\">union</span><span style=\"color: #24292E\">([inputSchema.shape.l1, z.</span><span style=\"color: #6F42C1\">null</span><span style=\"color: #24292E\">()]))</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  }).</span><span style=\"color: #6F42C1\">nullable</span><span style=\"color: #24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  l2: z.</span><span style=\"color: #6F42C1\">object</span><span style=\"color: #24292E\">({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    val: z.</span><span style=\"color: #6F42C1\">number</span><span style=\"color: #24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    next: z.</span><span style=\"color: #6F42C1\">lazy</span><span style=\"color: #24292E\">(() </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> z.</span><span style=\"color: #6F42C1\">union</span><span style=\"color: #24292E\">([inputSchema.shape.l2, z.</span><span style=\"color: #6F42C1\">null</span><span style=\"color: #24292E\">()]))</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  }).</span><span style=\"color: #6F42C1\">nullable</span><span style=\"color: #24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Input</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">z</span><span style=\"color: #24292E\">.</span><span style=\"color: #6F42C1\">infer</span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #D73A49\">typeof</span><span style=\"color: #24292E\"> inputSchema&gt;;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Output</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">solve</span><span style=\"color: #24292E\">({ </span><span style=\"color: #E36209\">l1</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">l2</span><span style=\"color: #24292E\"> }</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Input</span><span style=\"color: #24292E\">)</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Output</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">dummy</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> { val: </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">, next: </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\"> } </span><span style=\"color: #D73A49\">as</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> current </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> dummy;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> carry </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">while</span><span style=\"color: #24292E\"> (l1 </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> l2 </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> carry) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">sum</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> (l1?.val </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> (l2?.val </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> carry;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    carry </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> Math.</span><span style=\"color: #6F42C1\">floor</span><span style=\"color: #24292E\">(sum </span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">10</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    current.next </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> { val: sum </span><span style=\"color: #D73A49\">%</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">10</span><span style=\"color: #24292E\">, next: </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\"> };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    current </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> current.next;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    l1 </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> l1?.next </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    l2 </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> l2?.next </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> dummy.next;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Helper function to create linked list from array</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">arr</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">[])</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (arr.</span><span style=\"color: #005CC5\">length</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">===</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">head</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> { val: arr[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">], next: </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\"> } </span><span style=\"color: #D73A49\">as</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> current </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> head;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> i </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">; i </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\"> arr.</span><span style=\"color: #005CC5\">length</span><span style=\"color: #24292E\">; i</span><span style=\"color: #D73A49\">++</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    current.next </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> { val: arr[i], next: </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\"> };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    current </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> current.next;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> head;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Helper function to convert linked list to array</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">listToArray</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">head</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListNode</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">)</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">result</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">number</span><span style=\"color: #24292E\">[] </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> current </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> head;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">while</span><span style=\"color: #24292E\"> (current) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    result.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(current.val);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    current </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> current.next;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> result;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">cases</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">TestCase</span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #6F42C1\">Input</span><span style=\"color: #24292E\">, </span><span style=\"color: #6F42C1\">Output</span><span style=\"color: #24292E\">&gt;[] </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    input: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">      l1: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">3</span><span style=\"color: #24292E\">]),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">      l2: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">5</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">6</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\">])</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    expected: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">7</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">8</span><span style=\"color: #24292E\">]),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    name: </span><span style=\"color: #032F62\">&#39;Example 1&#39;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    input: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">      l1: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">]),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">      l2: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">])</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    expected: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">]),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    name: </span><span style=\"color: #032F62\">&#39;Example 2&#39;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    input: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">      l1: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">]),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">      l2: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">])</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    expected: </span><span style=\"color: #6F42C1\">createList</span><span style=\"color: #24292E\">([</span><span style=\"color: #005CC5\">8</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">9</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">]),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    name: </span><span style=\"color: #032F62\">&#39;Example 3&#39;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">];</span></span></code></pre>",
  "notes": "* 0002. Add Two Numbers\n *\n * Difficulty: medium\n * Tags: linked-list, math, recursion\n *\n * Description:\n * You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\n * You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n *\n * Approach:\n * - Traverse both linked lists simultaneously\n * - Add corresponding digits plus carry from previous addition\n * - Create new node for each digit of the result\n * - Handle different lengths by treating missing digits as 0\n *\n * Time Complexity: O(max(m, n)) where m, n are lengths of the two lists\n * Space Complexity: O(max(m, n)) for the result list",
  "testResults": [
    {
      "input": {
        "l1": {
          "val": 2,
          "next": {
            "val": 4,
            "next": {
              "val": 3,
              "next": null
            }
          }
        },
        "l2": {
          "val": 5,
          "next": {
            "val": 6,
            "next": {
              "val": 4,
              "next": null
            }
          }
        }
      },
      "expected": {
        "val": 7,
        "next": {
          "val": 0,
          "next": {
            "val": 8,
            "next": null
          }
        }
      },
      "name": "Example 1",
      "actual": {
        "val": 7,
        "next": {
          "val": 0,
          "next": {
            "val": 8,
            "next": null
          }
        }
      },
      "passed": true,
      "duration": 0.039750000000026375
    },
    {
      "input": {
        "l1": {
          "val": 0,
          "next": null
        },
        "l2": {
          "val": 0,
          "next": null
        }
      },
      "expected": {
        "val": 0,
        "next": null
      },
      "name": "Example 2",
      "actual": {
        "val": 0,
        "next": null
      },
      "passed": true,
      "duration": 0.0018750000000409273
    },
    {
      "input": {
        "l1": {
          "val": 9,
          "next": {
            "val": 9,
            "next": {
              "val": 9,
              "next": {
                "val": 9,
                "next": {
                  "val": 9,
                  "next": {
                    "val": 9,
                    "next": {
                      "val": 9,
                      "next": null
                    }
                  }
                }
              }
            }
          }
        },
        "l2": {
          "val": 9,
          "next": {
            "val": 9,
            "next": {
              "val": 9,
              "next": {
                "val": 9,
                "next": null
              }
            }
          }
        }
      },
      "expected": {
        "val": 8,
        "next": {
          "val": 9,
          "next": {
            "val": 9,
            "next": {
              "val": 9,
              "next": {
                "val": 0,
                "next": {
                  "val": 0,
                  "next": {
                    "val": 0,
                    "next": {
                      "val": 1,
                      "next": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "name": "Example 3",
      "actual": {
        "val": 8,
        "next": {
          "val": 9,
          "next": {
            "val": 9,
            "next": {
              "val": 9,
              "next": {
                "val": 0,
                "next": {
                  "val": 0,
                  "next": {
                    "val": 0,
                    "next": {
                      "val": 1,
                      "next": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "passed": true,
      "duration": 0.09304200000002538
    }
  ],
  "totalTests": 3,
  "passedTests": 3,
  "failedTests": 0
}